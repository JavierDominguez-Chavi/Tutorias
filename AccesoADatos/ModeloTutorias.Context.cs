//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccesoADatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EntidadesTutorias : DbContext
    {
        public EntidadesTutorias()
            : base("name=EntidadesTutorias")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Academicos> Academicos { get; set; }
        public virtual DbSet<AcademicosUsuarios> AcademicosUsuarios { get; set; }
        public virtual DbSet<Estudiantes> Estudiantes { get; set; }
        public virtual DbSet<ExperienciasEducativas> ExperienciasEducativas { get; set; }
        public virtual DbSet<ExperienciasEducativas_Academicos> ExperienciasEducativas_Academicos { get; set; }
        public virtual DbSet<FechasTutorias> FechasTutorias { get; set; }
        public virtual DbSet<Horarios> Horarios { get; set; }
        public virtual DbSet<PeriodosEscolares> PeriodosEscolares { get; set; }
        public virtual DbSet<Problematicas> Problematicas { get; set; }
        public virtual DbSet<ProgramasEducativos> ProgramasEducativos { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<Soluciones> Soluciones { get; set; }
        public virtual DbSet<TutoriasAcademicas> TutoriasAcademicas { get; set; }
        public virtual DbSet<AcademicosRoles> AcademicosRoles { get; set; }
    
        public virtual ObjectResult<GetEstudiantes_Result> GetEstudiantes(string busqueda)
        {
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("busqueda", busqueda) :
                new ObjectParameter("busqueda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEstudiantes_Result>("GetEstudiantes", busquedaParameter);
        }
    
        public virtual ObjectResult<GetExperienciasEducativas_Result> GetExperienciasEducativas(string busqueda)
        {
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("busqueda", busqueda) :
                new ObjectParameter("busqueda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExperienciasEducativas_Result>("GetExperienciasEducativas", busquedaParameter);
        }
    
        public virtual int InsertExperiencias_Estudiantes(Nullable<int> nrc, string matricula)
        {
            var nrcParameter = nrc.HasValue ?
                new ObjectParameter("nrc", nrc) :
                new ObjectParameter("nrc", typeof(int));
    
            var matriculaParameter = matricula != null ?
                new ObjectParameter("matricula", matricula) :
                new ObjectParameter("matricula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertExperiencias_Estudiantes", nrcParameter, matriculaParameter);
        }
    }
}
